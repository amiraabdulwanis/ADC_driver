Archive member included because of file (symbol)

d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

ADC_value           0x1               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./ADC_Prog.o
LOAD ./DIO_Prog.o
LOAD ./main.o
LOAD d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9cc
 *(.vectors)
 .vectors       0x00000000       0x54 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./ADC_Prog.o
 .text          0x0000007c        0x0 ./DIO_Prog.o
 .text          0x0000007c        0x0 ./main.o
 .text          0x0000007c        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.ADC_enuInt
                0x0000007c       0x34 ./ADC_Prog.o
                0x0000007c                ADC_enuInt
 .text.ADC_enuEnable
                0x000000b0       0x26 ./ADC_Prog.o
                0x000000b0                ADC_enuEnable
 .text.ADC_enuDisable
                0x000000d6       0x26 ./ADC_Prog.o
                0x000000d6                ADC_enuDisable
 .text.ADC_Vref
                0x000000fc       0x34 ./ADC_Prog.o
                0x000000fc                ADC_Vref
 .text.ADC_CHannel
                0x00000130       0x5e ./ADC_Prog.o
                0x00000130                ADC_CHannel
 .text.ADC_LeftAdjust
                0x0000018e       0x26 ./ADC_Prog.o
                0x0000018e                ADC_LeftAdjust
 .text.ADC_RightAdjust
                0x000001b4       0x26 ./ADC_Prog.o
                0x000001b4                ADC_RightAdjust
 .text.ADC_prescaler
                0x000001da       0x38 ./ADC_Prog.o
                0x000001da                ADC_prescaler
 .text.ADC_DisAutoTrig
                0x00000212       0x1c ./ADC_Prog.o
                0x00000212                ADC_DisAutoTrig
 .text.ADC_DisInt
                0x0000022e       0x1c ./ADC_Prog.o
                0x0000022e                ADC_DisInt
 .text.ADC_StartConversion
                0x0000024a       0x1c ./ADC_Prog.o
                0x0000024a                ADC_StartConversion
 .text.Flag_Check
                0x00000266       0x2e ./ADC_Prog.o
                0x00000266                Flag_Check
 .text.ADC_REConvADCH
                0x00000294       0x1c ./ADC_Prog.o
                0x00000294                ADC_REConvADCH
 .text.ADC_REConvADCL
                0x000002b0       0x1c ./ADC_Prog.o
                0x000002b0                ADC_REConvADCL
 .text.RE_u16ADCHL
                0x000002cc       0x76 ./ADC_Prog.o
                0x000002cc                RE_u16ADCHL
 .text.DIO_enumSetPinDirection
                0x00000342      0x220 ./DIO_Prog.o
                0x00000342                DIO_enumSetPinDirection
 .text.DIO_enumSetPinValue
                0x00000562      0x222 ./DIO_Prog.o
                0x00000562                DIO_enumSetPinValue
 .text.DIO_u8GetPinValue
                0x00000784      0x104 ./DIO_Prog.o
                0x00000784                DIO_u8GetPinValue
 .text.DIO_u8PortDirection
                0x00000888       0x82 ./DIO_Prog.o
                0x00000888                DIO_u8PortDirection
 .text.DIO_u8SetPortValue
                0x0000090a       0x82 ./DIO_Prog.o
                0x0000090a                DIO_u8SetPortValue
 .text.main     0x0000098c       0x3c ./main.o
                0x0000098c                main
 .text.libgcc   0x000009c8        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000009c8        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000009c8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000009c8        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000009c8                exit
                0x000009c8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000009c8        0x4 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000009cc                _etext = .

.data           0x00800060        0x0 load address 0x000009cc
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./ADC_Prog.o
 .data          0x00800060        0x0 ./DIO_Prog.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x1
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./ADC_Prog.o
 .bss           0x00800060        0x0 ./DIO_Prog.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 d:/amira d/data/tools/sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800060        0x1 ./main.o
                0x00800060                ADC_value
                0x00800061                PROVIDE (__bss_end, .)
                0x000009cc                __data_load_start = LOADADDR (.data)
                0x000009cc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800061        0x0
                0x00800061                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800061                PROVIDE (__noinit_end, .)
                0x00800061                _end = .
                0x00800061                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xe28
 *(.stab)
 .stab          0x00000000      0x78c ./ADC_Prog.o
 .stab          0x0000078c      0x534 ./DIO_Prog.o
                                0x5dc (size before relaxing)
 .stab          0x00000cc0      0x168 ./main.o
                                0x210 (size before relaxing)

.stabstr        0x00000000      0x5e6
 *(.stabstr)
 .stabstr       0x00000000      0x5e6 ./ADC_Prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ADC_DREIVER.elf elf32-avr)
LOAD linker stubs
